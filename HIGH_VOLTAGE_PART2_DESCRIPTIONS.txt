FOR EACH PART, ADDRESS THE FOLLOWING 6 THINGS:

i.	The name of the component (already listed)
ii.	The inputs and their bit-size
iii.	The outputs and their bit-size
iv.	The interfaces and their bit-size
v.	Any controls and their bit-size. (Such as Multiplexor Select)
vi.	A one-sentence description if necessary. 


Data being handled:
Two 16-bit numbers will be able to be added, subtracted, multiplied, and divided resulting in a 32-bit result
--------------------------------------------------------------------------------------------------------------------

PARTS:

i.) AND
ii.) inputs:  i - 16 bit
              j - 16 bit
iii.) output:(AND): f1 - 16 bit
iv.) 
v.) no controls
vi.) standard 16 bit AND gate.


i.) COMPARATOR
ii.) inputs:  a - 16 bit
              b - 16 bit
iii.) output: (A<B): ls - 1 bit
              (A>B): gt - 1 bit
              (A=B): eq - 1 bit
iv.)
v.)
vi.)

i.) DIVIDER
ii.) inputs:  a - 16 bit
              b - 16 bit
iii.) outputs:  (quotient): q - 16 bit
                (remainder): r - 16 bit
iv.)
v.)
vi.)

i.) FULL ADDER
ii.) inputs:  a - 16 bit
              b - 16 bit
              Cin - 1 bit
iii.) output: (A+B): s - 16 bit
              cout - 1 bit
iv.)
v.)
vi.)

i.) SUBTRACTOR
ii.) inputs:  a - 16 bit
              b - 16 bit
              cin - 1 bit
iii.) outputs:  (A-B): f2 - 16 bit
                (cout(a-b)): outwire2 - 1 bit
                (overflow): outwire5 - 1 bit
iv.)
v.)
vi.)

i.) LEFT ARBITER
ii.)
iii.)
iv.)
v.)
vi.)

i.) RIGHT ARBITER
ii.)
iii.)
iv.)
v.)
vi.)

i.) MULTIPLEXOR
ii.)
iii.)
iv.)
v.)
vi.)

i.) MULTIPLIER
ii.)
iii.)
iv.)
v.)
vi.)

i.) NAND
ii.)
iii.)
iv.)
v.)
vi.)

i.) NOT
ii.) inputs:  i - 16 bit
iii.) output:(NOT): f1 - 16 bit
iv.) No Interfaces
v.) no controls
vi.) standard 16 bit NOT gate.

i.) NOR
ii.)
iii.)
iv.)
v.)
vi.)

i.) OR
ii.)
iii.)
iv.)
v.)
vi.)

i.) XNOR
ii.)
iii.)
iv.)
v.)
vi.)

i.) XOR
ii.)
iii.)
iv.)
v.)
vi.)

i.) DECODER
ii.)
iii.)
iv.)
v.)
vi.)

i.) ENCODER
ii.)
iii.)
iv.)
v.)
vi.)
